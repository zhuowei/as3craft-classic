<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:local="*" >
<fx:Script>
	<![CDATA[
		import flash.utils.*;
		public var mapShowing:Boolean=false;
		public var conn:MinecraftConnection;
		public var mapPane:MapPane;
		public var tileset:Tileset;
		//[Embed(source="terrain.png")]
		//private var tileEmbed:Class;
		//public var tileset:Tileset= new Tileset((new tileEmbed() as Bitmap).bitmapData);
		private var coordTimer:uint;
		public function start():void{
			conn.addEventListener(ChatEvent.RECIEVED, chatRecieved);
			messageArea.text="\n\n\n\n\n\n";
			if(!coordTimer){
				setInterval(displayCoords, 800);
			}
			//messageArea.height=chatPane.height - chatPaneInputGroup.height;
			if(!mapPane){
				mapPane=new MapPane(tileset.tileWidth*12,tileset.tileWidth*12,conn);
				mapPane.tileset=tileset;
				trace("tileset: " +tileset);
				for(var i:Object in mapPane.tileset){
					trace("tileset " + i);
				}
				mapGroup.addElement(mapPane);
			}
			mapPane.centerToPlayer();
			mapPane.getBuildPermission();
			blockList.visible=mapPane.canBuild;
			cantBuildLabel.visible=!mapPane.canBuild;
			serverNameLabel.text=conn.serverName;
			serverMOTDLabel.text=conn.serverMOTD;
			
		}
		public function destroy():void{
			clearInterval(coordTimer);
			coordTimer=null;
			conn.removeEventListener(ChatEvent.RECIEVED, chatRecieved);
			mapPane.destroy();
			mapGroup.removeElement(mapPane);
			mapPane=null;
		}
		protected function chatRecieved(e:ChatEvent):void{
			messageArea.text=messageArea.text.slice(messageArea.text.indexOf("\n")+1).concat(removeColor(e.message)+"\n");
			//messageArea.text+=e.message+"\n";
		}
		public function displayCoords():void{
			xLabel.text="x: " + conn.world.curplayer.x;
			yLabel.text="y: " + conn.world.curplayer.y;
			zLabel.text="z: " + conn.world.curplayer.z;
		}
		protected function sendClicked():void{
			conn.sendMessage(chatInput.text);
			chatInput.text="";
		}
		public static function removeColor(str:String):String{
			return str.replace(/&./g, "");
		}
		protected function blockListChange():void{
			if(mapPane){
				mapPane.blockType=blockList.selectedItem.type;
			}
		}
]]>
</fx:Script>
<s:layout>
	<s:VerticalLayout/>
</s:layout>
<!--<s:TabBar id="viewBar" dataProvider="{mainStack}"/>-->
<s:HGroup><s:Button label="Disconnect" click="if(conn){conn.disconnect()}"/><s:Label id="serverNameLabel" fontSize="12"/><s:Label id="serverMOTDLabel" fontSize="11"/></s:HGroup>
<s:VGroup height="90%">
		<s:VGroup id="chatPane" width="100%" verticalAlign="bottom">
			<s:Label id="messageArea" width="100%"/>
			<s:HGroup id="chatPaneInputGroup"><s:TextInput id="chatInput" enter="sendClicked()" width="80%"/><s:Button click="sendClicked()" label="Send"/></s:HGroup>
		</s:VGroup>
		<s:HGroup id="worldPane">
			<s:VGroup id="mapGroup"></s:VGroup>
			<s:VGroup>
				<s:Label id="xLabel"/>
				<s:Label id="yLabel"/>
				<s:Label id="zLabel"/>
				<s:Button id="upButton" label="up" click="if(mapPane){mapPane.moveUp();}"/>
				<s:Button id="downButton" label="down" click="if(mapPane){mapPane.moveDown();}"/>
				<local:BlockDropDownList id="blockList" height="200" change="blockListChange()"/>
				<s:Label id="cantBuildLabel" text="Building is disabled." visible="false"/>
			</s:VGroup>
		</s:HGroup>
</s:VGroup>
</s:SkinnableContainer>
