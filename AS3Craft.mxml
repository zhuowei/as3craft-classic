<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:local="*"
			   minWidth="600" minHeight="600" width="600" height="1024" applicationComplete="start()" backgroundColor="#ffffff"
			   >
<fx:Script>
<![CDATA[
	import mx.controls.Alert;
	import mx.managers.PopUpManager;
	import flash.events.*;

	public static const DEFAULT_TILESET:String = "default-terrain.png";

	public var conn:MinecraftConnection;
	public var settingsMgr:SettingsManager=SettingsManager.manager;
	public var settingsWindow:SettingsWindow;
	public var aboutWindow:AboutWindow;

	public function start():void{
		this.stage.addEventListener("orientationChange", orientationEventHandler);
		loginForm.addEventListener("login", loginHandler);
		//trace(splashLabel);
		if(settingsMgr.tilesetURL == null){
			loadDefaultTileset();
			showTextureWarning();
		}
		settingsMgr.loadTileset();
		splashLabel.text = SplashMessages.getSplash();
	}
	protected function orientationEventHandler(e:StageOrientationEvent):void{
		this.width=this.stage.stageWidth;
		this.height=this.stage.stageHeight;
	}
	public function loginHandler(e:Event):void{
		//Alert.show(loginForm.host + ":" + loginForm.port + ":" + loginForm.username + ":" + loginForm.key);
		conn=new MinecraftConnection(loginForm.host,loginForm.port,loginForm.username,loginForm.key);
		conn.addEventListener(MinecraftConnection.HANDSHAKE, showLoadingPane);
		conn.addEventListener(MinecraftConnection.DATA_RECIEVED, updateLoadPercent);
		conn.addEventListener("disconnect", disconnectHandler);
		conn.world.addEventListener(World.PLAYER_READY, playerReadyHandler);
		conn.connect();
		conn.socket.addEventListener("ioError", ioErrorHandler);
	}
	public function playerReadyHandler(e:Event):void{
		worldView.conn=conn;
		if(settingsMgr.tileset==null){
			Alert.show("The tileset did not load completely. \nPerhaps the tileset that you have chosen in the Settings menu have been deleted or moved?");
			return;
		}
		worldView.tileset=settingsMgr.tileset;
		worldView.start();
		showWorldPane();
	}
	public function ioErrorHandler(e:IOErrorEvent):void{
		Alert.show("Error during connection: " + e.text + "\nPlease verify the address and try again.");
	}
	public function updateLoadPercent(e:ProgressEvent):void{
		//trace("update" + e);
		//trace(serverLoadingBar);
		serverLoadingBar.setProgress(e.bytesLoaded,100);
	}
	public function showLoadingPane(e:Event):void{
		mainStack.selectedChild=loadingPane;
		//mainStack.createComponentFromDescriptor(mainStack.childDescriptors[selectedIndex],true);
		//trace(e + "show");
		//trace(conn);
		//trace(serverNameLabel);
		serverNameLabel.text=conn.serverName;
		serverMOTDLabel.text=conn.serverMOTD;
		serverLoadingBar.setProgress(0,100);
		//mainStack.selectedChild=loadingPane;
	}
	public function showWorldPane():void{

		mainStack.selectedChild=worldPane;
	}
	protected function disconnectHandler(e:DisconnectEvent):void{
		worldView.destroy();
		if(e.kick){
			Alert.show("Disconnected: " + e.reason);
		}
		mainStack.selectedChild=splashPane;
	}
	public function launchSettings():void{
		if(!settingsWindow){
			settingsWindow=new SettingsWindow();
		}
		PopUpManager.addPopUp(settingsWindow, this, true);
	}
	public function launchAbout():void{
		if(!aboutWindow){
			aboutWindow=new AboutWindow();
		}
		aboutWindow.width=this.width*0.8;
		aboutWindow.height=this.height*0.8;
		PopUpManager.addPopUp(aboutWindow,this,true);
	}
	private function loadDefaultTileset():void{
		settingsMgr.tilesetURL = DEFAULT_TILESET;
	}
	private function showTextureWarning():void{
		/*Alert.show("There is currently no texture pack installed. A texture pack changes the way the game displays blocks. " + 
				"The built-in texture pack will be loaded; however, it is missing images for some blocks, " +
				"which makes them invisible. " +  
				"To install a texture pack, transfer it to the Playbook and select it from the Settings" + 
				" window, which can be opened from the main screen.");*/
	}
]]>
</fx:Script>
<!--<local:LoginForm id="loginForm"/>-->
<mx:ViewStack id="mainStack" width="100%" height="100%">
	<s:NavigatorContent id="splashPane" width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		<s:Label text="AS3Craft Classic" fontSize="40"/>
		<s:HGroup><mx:Spacer width="100%"/><s:Label id="splashLabel" text="This text does not exist!"/></s:HGroup>
		<local:LoginForm id="loginForm" width="80%"/>
		<s:HGroup><s:Button id="settingsButton" label="Settings..." click="launchSettings()"/>
			<s:Button id="aboutButton" label="About..." click="launchAbout()"/>
		</s:HGroup>
	</s:NavigatorContent>
	<s:NavigatorContent id="loadingPane" width="100%" height="100%" creationPolicy="all">
		<s:layout>
			<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
		</s:layout>
		<s:Label text="Loading..."/>
		<s:Label id="serverNameLabel"/>
		<s:Label id="serverMOTDLabel"/>
		<mx:ProgressBar id="serverLoadingBar" labelPlacement="bottom" minimum="0" visible="true" maximum="100" label="Loading terrain..." 
			direction="right" mode="manual" width="100%"/>
	</s:NavigatorContent>
	<s:NavigatorContent id="worldPane" width="100%" height="100%" creationPolicy="all">
		<local:WorldView id="worldView" width="100%" height="100%"/>
	</s:NavigatorContent>
</mx:ViewStack>

</s:Application>
